<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.haizhi.mapper.DataMapper">
  <resultMap id="BaseResultMap" type="cn.haizhi.bean.Data">
    <id column="data_id" jdbcType="VARCHAR" property="dataId" />
    <result column="average" jdbcType="DOUBLE" property="average" />
    <result column="upper_data" jdbcType="DOUBLE" property="upperData" />
    <result column="lower_data" jdbcType="DOUBLE" property="lowerData" />
    <result column="data_name" jdbcType="VARCHAR" property="dataName" />
    <result column="age" jdbcType="TINYINT" property="age" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="type" jdbcType="TINYINT" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    data_id, average, upper_data, lower_data, data_name, age, gender, type
  </sql>
  <select id="selectByExample" parameterType="cn.haizhi.bean.DataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from data
    where data_id = #{dataId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from data
    where data_id = #{dataId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.haizhi.bean.DataExample">
    delete from data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.haizhi.bean.Data">
    insert into data (data_id, average, upper_data, 
      lower_data, data_name, age, 
      gender, type)
    values (#{dataId,jdbcType=VARCHAR}, #{average,jdbcType=DOUBLE}, #{upperData,jdbcType=DOUBLE}, 
      #{lowerData,jdbcType=DOUBLE}, #{dataName,jdbcType=VARCHAR}, #{age,jdbcType=TINYINT}, 
      #{gender,jdbcType=TINYINT}, #{type,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.haizhi.bean.Data">
    insert into data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dataId != null">
        data_id,
      </if>
      <if test="average != null">
        average,
      </if>
      <if test="upperData != null">
        upper_data,
      </if>
      <if test="lowerData != null">
        lower_data,
      </if>
      <if test="dataName != null">
        data_name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dataId != null">
        #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="average != null">
        #{average,jdbcType=DOUBLE},
      </if>
      <if test="upperData != null">
        #{upperData,jdbcType=DOUBLE},
      </if>
      <if test="lowerData != null">
        #{lowerData,jdbcType=DOUBLE},
      </if>
      <if test="dataName != null">
        #{dataName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=TINYINT},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.haizhi.bean.DataExample" resultType="java.lang.Long">
    select count(*) from data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update data
    <set>
      <if test="record.dataId != null">
        data_id = #{record.dataId,jdbcType=VARCHAR},
      </if>
      <if test="record.average != null">
        average = #{record.average,jdbcType=DOUBLE},
      </if>
      <if test="record.upperData != null">
        upper_data = #{record.upperData,jdbcType=DOUBLE},
      </if>
      <if test="record.lowerData != null">
        lower_data = #{record.lowerData,jdbcType=DOUBLE},
      </if>
      <if test="record.dataName != null">
        data_name = #{record.dataName,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=TINYINT},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update data
    set data_id = #{record.dataId,jdbcType=VARCHAR},
      average = #{record.average,jdbcType=DOUBLE},
      upper_data = #{record.upperData,jdbcType=DOUBLE},
      lower_data = #{record.lowerData,jdbcType=DOUBLE},
      data_name = #{record.dataName,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=TINYINT},
      gender = #{record.gender,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.haizhi.bean.Data">
    update data
    <set>
      <if test="average != null">
        average = #{average,jdbcType=DOUBLE},
      </if>
      <if test="upperData != null">
        upper_data = #{upperData,jdbcType=DOUBLE},
      </if>
      <if test="lowerData != null">
        lower_data = #{lowerData,jdbcType=DOUBLE},
      </if>
      <if test="dataName != null">
        data_name = #{dataName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=TINYINT},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
    </set>
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.haizhi.bean.Data">
    update data
    set average = #{average,jdbcType=DOUBLE},
      upper_data = #{upperData,jdbcType=DOUBLE},
      lower_data = #{lowerData,jdbcType=DOUBLE},
      data_name = #{dataName,jdbcType=VARCHAR},
      age = #{age,jdbcType=TINYINT},
      gender = #{gender,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT}
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
</mapper>